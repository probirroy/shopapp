apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'
apply plugin: 'jacoco-android'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration["androidCompileSdkVersion"]
    buildToolsVersion globalConfiguration["androidBuildToolsVersion"]

    defaultConfig {
        applicationId "com.shopapp"
        minSdkVersion globalConfiguration["androidMinSdkVersion"]
        targetSdkVersion globalConfiguration["androidTargetSdkVersion"]
        testInstrumentationRunner globalConfiguration["testInstrumentationRunner"]

        versionCode 1
        versionName globalConfiguration["versionName"]

        multiDexEnabled true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true

            all {
                jacoco {
                    includeNoLocationClasses = true
                }
            }
        }
    }
}

kapt {
    generateStubs = true
}

jacocoAndroidUnitTestReport {
    csv.enabled false
    html.enabled false
    xml.enabled true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    implementation "com.android.support:multidex:1.0.3"
    implementation "com.android.support:appcompat-v7:$androidSupportVersion"
    implementation "com.android.support:design:$androidSupportVersion"
    implementation "com.android.support:recyclerview-v7:$androidSupportVersion"
    implementation "com.android.support:cardview-v7:$androidSupportVersion"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayoutVersion"

    api 'net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:2.1.0'
    implementation "com.facebook.fresco:fresco:$frescoVersion"
    implementation 'com.github.rubensousa:gravitysnaphelper:1.3'
    implementation 'me.relex:circleindicator:1.2.2@aar'

    implementation "com.hannesdorfmann.mosby3:mvp:$mosbyVersion"

    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'

    implementation 'org.jsoup:jsoup:1.10.1'

    implementation "io.reactivex.rxjava2:rxjava:$rxVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"

    implementation('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
        transitive = true
    }

    implementation project(':data')
    implementation project(':domain')
    implementation project(':gateway')

    testImplementation "com.google.dagger:dagger:$daggerVersion"
    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"
    testImplementation "com.android.support:appcompat-v7:$androidSupportVersion"
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "org.robolectric:multidex:3.4.2"
    testImplementation "org.robolectric:shadows-support-v4:3.3.2"
    testImplementation "com.nhaarman:mockito-kotlin-kt1.1:$mockitoKotlinVersion"
    androidTestImplementation "com.android.support.test:runner:$testRunnerVersion"
}

project.afterEvaluate {
    android.applicationVariants.all { variant ->
        def realVariantName = variant.name
        def variantName = variant.name.capitalize()

        def task = project.tasks["jacocoTest${variantName}UnitTestReport"]
        def defaultExcludes = task.classDirectories.excludes

        def additionalExcludes = []

        def excludes = defaultExcludes + additionalExcludes

        def kotlinDebugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/${realVariantName}", excludes: excludes)

        task.classDirectories.excludes = excludes
        task.classDirectories += kotlinDebugTree
    }
}